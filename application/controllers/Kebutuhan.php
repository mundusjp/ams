<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Kebutuhan extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Kebutuhan_model');
        $this->load->model('Divisi_model');
        $this->load->model('Admin_model');
    } 

    /*
     * Listing of beli
     */
    function index()
    {
        $data['kebutuhan'] = $this->Kebutuhan_model->get_all_kebutuhan();
        $data['all_divisi'] = $this->Divisi_model->get_all_divisi();
        $data['all_user'] = $this->Admin_model->get_all_admin();
        
        $data['_view'] = 'kebutuhan/index';
        $this->load->view('templates/dashboard/header');
        $this->load->view('templates/dashboard/topbar');
        $this->load->view('templates/dashboard/leftbar');
        $this->load->view('templates/dashboard/rightbar');
        $this->load->view('pages/kebutuhan/index',$data);
        $this->load->view('templates/dashboard/footer');
    }

    /*
     * Adding a new beli
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nama_barang','Nama Barang','required');
		$this->form_validation->set_rules('jumlah','Jumlah','required|integer');
        $id_user = $this->session->userdata('id_user');
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_divisi' => $this->input->post('id_divisi'),
				'nama_barang' => $this->input->post('nama_barang'),
                'jumlah' => $this->input->post('jumlah'),
                'id_user' =>  $id_user,
            );
            
            $kebutuhan_id = $this->Kebutuhan_model->add_kebutuhan($params);
            redirect('kebutuhan/index');
        }
        else
        {
			$this->load->model('Divisi_model');
            $data['all_divisi'] = $this->Divisi_model->get_all_divisi();
            
            $data['_view'] = 'kebutuhan/add';
            $this->load->view('pages/kebutuhan/add',$data);
        }
    }  

    /*
     * Editing a beli
     */
    function edit($id_kebutuhan)
    {   
        // check if the beli exists before trying to edit it
        $data['beli'] = $this->Beli_model->get_beli($id_beli);
        
        if(isset($data['beli']['id_beli']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('tanggal_transaksi','Tanggal Transaksi','required');
			$this->form_validation->set_rules('total_harga','Total Harga','required|integer');
			$this->form_validation->set_rules('deskripsi','Deskripsi','required|max_length[191]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_supplier' => $this->input->post('id_supplier'),
					'tanggal_transaksi' => $this->input->post('tanggal_transaksi'),
					'total_harga' => $this->input->post('total_harga'),
					'deskripsi' => $this->input->post('deskripsi'),
                );

                $this->Beli_model->update_beli($id_beli,$params);            
                redirect('beli/index');
            }
            else
            {
				$this->load->model('Supplier_model');
				$data['all_supplier'] = $this->Supplier_model->get_all_supplier();

                $data['_view'] = 'beli/edit';
                $this->load->view('pages/beli/edit',$data);
            }
        }
        else
            show_error('The beli you are trying to edit does not exist.');
    } 

    /*
     * Deleting beli
     */
    function remove($id_beli)
    {
        $beli = $this->Beli_model->get_beli($id_beli);

        // check if the beli exists before trying to delete it
        if(isset($beli['id_beli']))
        {
            $this->Beli_model->delete_beli($id_beli);
            redirect('beli/index');
        }
        else
            show_error('The beli you are trying to delete does not exist.');
    }
    
}
