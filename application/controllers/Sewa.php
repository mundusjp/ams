<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Sewa extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Sewa_model');
    } 

    /*
     * Listing of sewa
     */
    function index()
    {
        $data['sewa'] = $this->Sewa_model->get_all_sewa();
        
        $data['_view'] = 'sewa/index';
        $this->load->view('pages/sewa/index',$data);
    }

    /*
     * Adding a new sewa
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('tanggal_transaksi','Tanggal Transaksi','required');
		$this->form_validation->set_rules('periode_start','Periode Start','required');
		$this->form_validation->set_rules('periode_end','Periode End','required');
		$this->form_validation->set_rules('biaya','Biaya','required|integer|greater_than[0]');
		$this->form_validation->set_rules('deskripsi','Deskripsi','required|max_length[191]');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'id_supplier' => $this->input->post('id_supplier'),
				'tanggal_transaksi' => $this->input->post('tanggal_transaksi'),
				'periode_start' => $this->input->post('periode_start'),
				'periode_end' => $this->input->post('periode_end'),
				'biaya' => $this->input->post('biaya'),
				'deskripsi' => $this->input->post('deskripsi'),
            );
            
            $sewa_id = $this->Sewa_model->add_sewa($params);
            redirect('sewa/index');
        }
        else
        {
			$this->load->model('Supplier_model');
			$data['all_supplier'] = $this->Supplier_model->get_all_supplier();
            
            $data['_view'] = 'sewa/add';
            $this->load->view('pages/sewa/add',$data);
        }
    }  

    /*
     * Editing a sewa
     */
    function edit($id_sewa)
    {   
        // check if the sewa exists before trying to edit it
        $data['sewa'] = $this->Sewa_model->get_sewa($id_sewa);
        
        if(isset($data['sewa']['id_sewa']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('tanggal_transaksi','Tanggal Transaksi','required');
			$this->form_validation->set_rules('periode_start','Periode Start','required');
			$this->form_validation->set_rules('periode_end','Periode End','required');
			$this->form_validation->set_rules('biaya','Biaya','required|integer|greater_than[0]');
			$this->form_validation->set_rules('deskripsi','Deskripsi','required|max_length[191]');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'id_supplier' => $this->input->post('id_supplier'),
					'tanggal_transaksi' => $this->input->post('tanggal_transaksi'),
					'periode_start' => $this->input->post('periode_start'),
					'periode_end' => $this->input->post('periode_end'),
					'biaya' => $this->input->post('biaya'),
					'deskripsi' => $this->input->post('deskripsi'),
                );

                $this->Sewa_model->update_sewa($id_sewa,$params);            
                redirect('sewa/index');
            }
            else
            {
				$this->load->model('Supplier_model');
				$data['all_supplier'] = $this->Supplier_model->get_all_supplier();

                $data['_view'] = 'sewa/edit';
                $this->load->view('pages/sewa/edit',$data);
            }
        }
        else
            show_error('The sewa you are trying to edit does not exist.');
    } 

    /*
     * Deleting sewa
     */
    function remove($id_sewa)
    {
        $sewa = $this->Sewa_model->get_sewa($id_sewa);

        // check if the sewa exists before trying to delete it
        if(isset($sewa['id_sewa']))
        {
            $this->Sewa_model->delete_sewa($id_sewa);
            redirect('sewa/index');
        }
        else
            show_error('The sewa you are trying to delete does not exist.');
    }
    
}
