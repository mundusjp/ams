<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Manage extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Divisi_model');
        $this->load->model('admin_model');
        $this->load->model('Kantor_model');
    }
    // ------------------------------------------------------------------------
    // Index functions
    // ------------------------------------------------------------------------
    function kantor()
    {
        $data['kantor'] = $this->Kantor_model->get_all_kantor();

        $data['_view'] = 'manage/kantor';
        $this->load->view('templates/dashboard/header');
      $this->load->view('templates/dashboard/topbar');
      $this->load->view('templates/dashboard/leftbar');
      $this->load->view('templates/dashboard/rightbar');
        $this->load->view('pages/manage/kantor',$data);
        $this->load->view('templates/dashboard/footer');

    }

    function user()
    {
        $data['user'] = $this->admin_model->get_all_admin();
        $data['all_divisi'] = $this->Divisi_model->get_all_divisi();

        $data['_view'] = 'manage/user';
        $this->load->view('templates/dashboard/header');
        $this->load->view('templates/dashboard/topbar');
        $this->load->view('templates/dashboard/leftbar');
        $this->load->view('templates/dashboard/rightbar');
        $this->load->view('pages/manage/user',$data);
        $this->load->view('templates/dashboard/footer');

        // $queryDivisi = $this->$db->query("SELECT id_divisi from divisi");
        // $queryUser = $this->db->query("SELECT * from user WHERE id_divisi = $queryDivisi");
    }

    function divisi()
    {
        $data['divisi'] = $this->Divisi_model->get_all_divisi();
        $data['all_kantor'] = $this->Kantor_model->get_all_kantor();

        $data['_view'] = 'manage/divisi';
        $this->load->view('templates/dashboard/header');
        $this->load->view('templates/dashboard/topbar');
        $this->load->view('templates/dashboard/leftbar');
        $this->load->view('templates/dashboard/rightbar');
        $this->load->view('pages/manage/divisi',$data);
        $this->load->view('templates/dashboard/footer');

    }
    // ------------------------------------------------------------------------
    // Add functions
    // ------------------------------------------------------------------------
    function addkantor()
    {
        $this->load->library('form_validation');

    $this->form_validation->set_rules('nama','Nama','required|max_length[50]');
    $this->form_validation->set_rules('alamat','Alamat','required|max_length[191]');
    $this->form_validation->set_rules('status','Status','required|integer');

    if($this->form_validation->run())
        {
            $params = array(
        'nama' => $this->input->post('nama'),
        'alamat' => $this->input->post('alamat'),
        'status' => $this->input->post('status'),
            );

            $kantor_id = $this->Kantor_model->add_kantor($params);
            redirect('manage/kantorx');
        }
        else
        {
            $data['_view'] = 'manage/addkantor';
            $this->load->view('pages/manage/kantor',$data);
        }
    }

    function adduser(){

        // $this->load->view('templates/dashboard/header');
        // $this->load->view('templates/dashboard/topbar');
        // $this->load->view('templates/dashboard/leftbar');
        // $this->load->view('templates/dashboard/rightbar');
        // //$this->load->view('pages/admin/admin_tambah');
        // $this->load->view('templates/dashboard/footer');

        // $this->load->library('form_validation');
        // $this->form_validation->set_error_delimiters('', '');
        // $this->form_validation->set_rules('password', 'Password', ['required', 'min_length[8]'], ['required'=>"Enter password"]);
        // $this->form_validation->set_rules('passwordDup', 'Password Confirmation', ['required', 'matches[password]'], ['required'=>"Please retype password"]);

        $username = $this->input->post('username');
        $password = $this->input->post('password');
        $nama = $this->input->post('nama');
        $status = $this->input->post('status');
        $divisi = $this->input->post('id_divisi');
        $no_hp = $this->input->post('no_hp');

        $params = array(
          'username' => $username,
          'password' => $password,
          'nama' => $nama,
          'status' => $status,
          'id_divisi' => $divisi,
        );
        $this->admin_model->input_data($params,'user');

        redirect('manage/user');
      }

      function adddivisi()
      {
          $this->load->library('form_validation');

      $this->form_validation->set_rules('nama','Nama','required|max_length[50]');
      $this->form_validation->set_rules('gedung','Gedung','required|max_length[50]');
      $this->form_validation->set_rules('lantai','Lantai','required|integer');
      $this->form_validation->set_rules('id_kantor','Id Kantor','required|integer');

      if($this->form_validation->run())
          {
              $params = array(
          'id_kantor' => $this->input->post('id_kantor'),
          'nama' => $this->input->post('nama'),
          'gedung' => $this->input->post('gedung'),
          'lantai' => $this->input->post('lantai'),
              );

              $divisi_id = $this->Divisi_model->add_divisi($params);
              redirect('manage/divisi');
          }
          else
          {
        $this->load->model('Kantor_model');
        $data['all_kantor'] = $this->Kantor_model->get_all_kantor();

              $data['_view'] = 'manage/adddivisi';
              $this->load->view('pages/divisi/add',$data);
          }
      }

// ------------------------------------------------------------------------
// Edit functions
// ------------------------------------------------------------------------
    function editkantor($id_kantor)
    {
        // check if the kantor exists before trying to edit it
        $data['kantor'] = $this->Kantor_model->get_kantor($id_kantor);

        if(isset($data['kantor']['id_kantor']))
        {
            $this->load->library('form_validation');

      $this->form_validation->set_rules('nama','Nama','required|max_length[50]');
      $this->form_validation->set_rules('alamat','Alamat','required|max_length[191]');
      $this->form_validation->set_rules('status','Status','required|integer');

      if($this->form_validation->run())
            {
                $params = array(
          'nama' => $this->input->post('nama'),
          'alamat' => $this->input->post('alamat'),
          'status' => $this->input->post('status'),
                );

                $this->Kantor_model->update_kantor($id_kantor,$params);
                redirect('manage/kantor');
            }
            else
            {
                $data['_view'] = 'manage/kantor';
                $this->load->view('pages/manage/kantor',$data);
            }
        }
        else
            show_error('Kantor telah dihapus atau tidak ada');
    }

    function editdivisi($id_divisi)
    {
        // check if the divisi exists before trying to edit it
        $data['divisi'] = $this->Divisi_model->get_divisi($id_divisi);

        if(isset($data['divisi']['id_divisi']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nama','Nama','required|max_length[50]');
			$this->form_validation->set_rules('gedung','Gedung','required|max_length[50]');
			$this->form_validation->set_rules('lantai','Lantai','required|integer');
			$this->form_validation->set_rules('id_kantor','Id Kantor','required|integer');

			if($this->form_validation->run())
            {
                $params = array(
					'id_kantor' => $this->input->post('id_kantor'),
					'nama' => $this->input->post('nama'),
					'gedung' => $this->input->post('gedung'),
					'lantai' => $this->input->post('lantai'),
                );

                $this->Divisi_model->update_divisi($id_divisi,$params);
                redirect('manage/divisi');
            }
            else
            {
				$this->load->model('Kantor_model');
				$data['all_kantor'] = $this->Kantor_model->get_all_kantor();

                $data['_view'] = 'divisi/edit';
                $this->load->view('pages/manage/divisi',$data);
            }
        }
        else
            show_error('Divisi telah dihapus atau tidak ada');
    }

// ------------------------------------------------------------------------
// Remove Functions
// ------------------------------------------------------------------------
    function removekantor($id_kantor)
    {
        $kantor = $this->Kantor_model->get_kantor($id_kantor);

        // check if the kantor exists before trying to delete it
        if(isset($kantor['id_kantor']))
        {
            $this->Kantor_model->delete_kantor($id_kantor);
            redirect('manage/kantor');
        }
        else
            show_error('Kantor telah dihapus atau tidak ada');
    }

    function removeuser($id_admin)
    {
        $admin = $this->admin_model->get_admin($id_admin);

        // check if the divisi exists before trying to delete it
        if(isset($admin['id_user']))
        {
            $this->admin_model->hapus_admin($id_admin);
            redirect('manage/user');
        }
        else
            show_error('User telah dihapus atau tidak ada');
    }

    function removedivisi($id_divisi)
    {
        $divisi = $this->Divisi_model->get_divisi($id_divisi);

        // check if the divisi exists before trying to delete it
        if(isset($divisi['id_divisi']))
        {
            $this->Divisi_model->delete_divisi($id_divisi);
            redirect('manage/divisi');
        }
        else
            show_error('Divisi telah dihapus atau tidak ada');
    }

  }
